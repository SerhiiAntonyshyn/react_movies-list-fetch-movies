{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","imdbId","className","src","alt","href","MoviesList","movies","map","movie","key","FindMovie","addMovie","useState","titleOfMovie","setTitleOfMovie","loadedMovie","createMovie","error","setError","findMovie","a","fetch","then","promise","json","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","handleChange","onClick","App","data","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.185e7f6b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n  imdbId,\n}) => (\n  <div className=\"card\">\n    {!imdbId ? (\n      <div className=\"card__empty\">\n        Enter name of the movie\n      </div>\n    ) : (\n      <div className=\"card__main\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            <p className=\"description\">{description}</p>\n            <br />\n            <a\n              className=\"IMDB\"\n              href={imdbUrl}\n            >\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [titleOfMovie, setTitleOfMovie] = useState('');\n  const [loadedMovie, createMovie] = useState('');\n  const [error, setError] = useState(false);\n\n  const findMovie = async() => {\n    const movie = await getMovie(titleOfMovie);\n\n    if (movie.Response === 'False') {\n      setError(true);\n\n      return;\n    }\n\n    setError(false);\n\n    createMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n      imdbId: movie.imdbID,\n    });\n  };\n\n  const handleChange = (event) => {\n    setTitleOfMovie(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                error && 'input is-danger',\n              )}\n              value={titleOfMovie}\n              onChange={event => handleChange(event)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(loadedMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {error ? 'Wrong title of Movie' : (\n          <MovieCard {...loadedMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=4535c7b3&t=';\n\nexport const getMovie = title => fetch(`${API_URL}${title}`)\n  .then(promise => promise.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const checkMovie = (loadedMovie) => {\n    const sameMovie = movies.find(movie => movie.imdbId === loadedMovie.imdbId);\n\n    if (sameMovie || loadedMovie === '') {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      loadedMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={checkMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}